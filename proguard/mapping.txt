android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    void bumpBackStackNesting(int) -> a
    void run() -> run
    void popFromBackStack(boolean) -> a
    java.lang.String getName() -> a
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> N
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    int mFragmentId -> u
    int mContainerId -> v
    java.lang.String mTag -> w
    boolean mHidden -> x
    boolean mDetached -> y
    boolean mRetainInstance -> z
    boolean mRetaining -> A
    boolean mHasMenu -> B
    boolean mMenuVisible -> C
    boolean mCalled -> D
    int mNextAnim -> E
    android.view.ViewGroup mContainer -> F
    android.view.View mView -> G
    android.view.View mInnerView -> H
    boolean mDeferStart -> I
    boolean mUserVisibleHint -> J
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> K
    boolean mLoadersStarted -> L
    boolean mCheckedForLoaderManager -> M
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState() -> a
    void setIndex(int) -> a
    boolean isInBackStack() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> c
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> a
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> c
    void onStart() -> d
    void onResume() -> e
    void onSaveInstanceState(android.os.Bundle) -> d
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> f
    void onStop() -> g
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> h
    void onDestroy() -> i
    void initState() -> j
    void onDetach() -> k
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> l
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void performStart() -> m
    void performStop() -> n
    void performReallyStop() -> o
    void performDestroyView() -> p
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.e:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.f:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.g:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    boolean mCreated -> c
    boolean mResumed -> d
    boolean mStopped -> e
    boolean mReallyStopped -> f
    boolean mRetaining -> g
    boolean mOptionsMenuInvalidated -> h
    boolean mCheckedForLoaderManager -> i
    boolean mLoadersStarted -> j
    android.support.v4.util.SparseArrayCompat mAllLoaderManagers -> k
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> l
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragmentIndex(int) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.h:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.i:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SparseArrayCompat loaders -> e
android.support.v4.app.FragmentManager -> android.support.v4.app.j:
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.k:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.l:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    boolean mNeedMenuInvalidate -> p
    boolean mStateSaved -> q
    boolean mDestroyed -> r
    java.lang.String mNoTransactionsBecause -> s
    boolean mHavePendingDeferredStart -> t
    android.os.Bundle mStateBundle -> u
    android.util.SparseArray mStateArray -> v
    java.lang.Runnable mExecCommit -> w
    android.view.animation.Interpolator DECELERATE_QUINT -> x
    android.view.animation.Interpolator DECELERATE_CUBIC -> y
    android.view.animation.Interpolator ACCELERATE_QUINT -> z
    android.view.animation.Interpolator ACCELERATE_CUBIC -> A
    boolean executePendingTransactions() -> a
    boolean popBackStackImmediate() -> b
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> c
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> r
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> d
    void reportBackStackChanged() -> e
    void addBackStackState(android.support.v4.app.BackStackRecord) -> a
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> f
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> g
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity) -> a
    void noteStateNotSaved() -> h
    void dispatchCreate() -> i
    void dispatchActivityCreated() -> j
    void dispatchStart() -> k
    void dispatchResume() -> l
    void dispatchPause() -> m
    void dispatchStop() -> n
    void dispatchReallyStop() -> o
    void dispatchDestroy() -> p
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> q
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.m:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.n:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTransaction -> android.support.v4.app.p:
android.support.v4.app.LoaderManager -> android.support.v4.app.q:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.r:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.s:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    android.support.v4.app.FragmentActivity mActivity -> d
    boolean mStarted -> e
    boolean mRetaining -> f
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.t:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.u:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.v:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.content.LocalBroadcastManager -> android.support.v4.a.c:
    android.content.Context mAppContext -> a
    java.util.HashMap mReceivers -> b
    java.util.HashMap mActions -> c
    java.util.ArrayList mPendingBroadcasts -> d
    android.os.Handler mHandler -> e
    java.lang.Object mLock -> f
    android.support.v4.content.LocalBroadcastManager mInstance -> g
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> a
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> a
    void unregisterReceiver(android.content.BroadcastReceiver) -> a
    boolean sendBroadcast(android.content.Intent) -> a
    void executePendingBroadcasts() -> a
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.a.d:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.a.e:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.a.f:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    java.lang.String toString() -> toString
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> a
    java.lang.Object get(int,java.lang.Object) -> a
    void delete(int) -> b
    void remove(int) -> c
    void removeAt(int) -> d
    void gc() -> c
    void put(int,java.lang.Object) -> b
    int size() -> a
    int keyAt(int) -> e
    java.lang.Object valueAt(int) -> f
    void clear() -> b
    int binarySearch(int[],int,int,int) -> a
    int idealByteArraySize(int) -> g
    int idealIntArraySize(int) -> h
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.e:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.f:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.i:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.k:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.l:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.o:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.p:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.q:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    long getFrameTime() -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.s:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.t:
    long getFrameTime() -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.u:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.v:
    void postInvalidateOnAnimation(android.view.View) -> b
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.w:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.x:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.y:
    long getFrameTime() -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.z:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.aa:
    void postInvalidateOnAnimation(android.view.View) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mInitialMotionX -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    int mActivePointerId -> H
    android.view.VelocityTracker mVelocityTracker -> I
    int mMinimumVelocity -> J
    int mMaximumVelocity -> K
    int mFlingDistance -> L
    int mCloseEnough -> M
    boolean mFakeDragging -> N
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> O
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> P
    boolean mFirstLayout -> Q
    boolean mNeedCalculatePageOffsets -> R
    boolean mCalledSuper -> S
    int mDecorChildCount -> T
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> V
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> W
    int mScrollState -> Z
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll() -> g
    boolean isGutterDrag(float,float) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$300() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ab:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ac:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ad:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ae:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.af:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ag:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ah:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ai:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.aj:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
me.spadival.podmode.AudioFocusHelper -> me.spadival.podmode.a:
    android.media.AudioManager mAM -> a
    me.spadival.podmode.MusicFocusable mFocusable -> b
    boolean requestFocus() -> a
    boolean abandonFocus() -> b
    void onAudioFocusChange(int) -> onAudioFocusChange
me.spadival.podmode.BluetoothSerialService -> me.spadival.podmode.b:
    java.util.UUID MY_UUID -> a
    android.bluetooth.BluetoothAdapter mAdapter -> b
    android.os.Handler mHandler -> c
    me.spadival.podmode.BluetoothSerialService$AcceptThread mAcceptThread -> d
    me.spadival.podmode.BluetoothSerialService$ConnectThread mConnectThread -> e
    me.spadival.podmode.BluetoothSerialService$ConnectedThread mConnectedThread -> f
    int mState -> g
    void setState(int) -> a
    int getState() -> a
    void start() -> b
    void connect(android.bluetooth.BluetoothDevice) -> a
    void connected(android.bluetooth.BluetoothSocket,android.bluetooth.BluetoothDevice) -> a
    void stop() -> c
    void write(byte[]) -> a
    int read(byte[]) -> b
    void connectionFailed() -> e
    void connectionLost() -> f
    android.bluetooth.BluetoothAdapter access$0(me.spadival.podmode.BluetoothSerialService) -> a
    java.util.UUID access$1() -> d
    int access$2(me.spadival.podmode.BluetoothSerialService) -> b
    void access$3(me.spadival.podmode.BluetoothSerialService) -> c
    void access$4(me.spadival.podmode.BluetoothSerialService,me.spadival.podmode.BluetoothSerialService$ConnectThread) -> a
    android.os.Handler access$5(me.spadival.podmode.BluetoothSerialService) -> d
    void access$6(me.spadival.podmode.BluetoothSerialService) -> e
me.spadival.podmode.BluetoothSerialService$AcceptThread -> me.spadival.podmode.c:
    android.bluetooth.BluetoothServerSocket mmServerSocket -> b
    me.spadival.podmode.BluetoothSerialService this$0 -> a
    void run() -> run
    void cancel() -> a
me.spadival.podmode.BluetoothSerialService$ConnectThread -> me.spadival.podmode.d:
    android.bluetooth.BluetoothSocket mmSocket -> b
    android.bluetooth.BluetoothDevice mmDevice -> c
    me.spadival.podmode.BluetoothSerialService this$0 -> a
    void run() -> run
    void cancel() -> a
me.spadival.podmode.BluetoothSerialService$ConnectedThread -> me.spadival.podmode.e:
    android.bluetooth.BluetoothSocket mmSocket -> b
    java.io.InputStream mmInStream -> c
    java.io.OutputStream mmOutStream -> d
    me.spadival.podmode.BluetoothSerialService this$0 -> a
    void run() -> run
    void write(byte[]) -> a
    int read(byte[]) -> b
    void cancel() -> a
me.spadival.podmode.FT311UARTInterface -> me.spadival.podmode.f:
    android.hardware.usb.UsbManager usbmanager -> a
    android.hardware.usb.UsbAccessory usbaccessory -> b
    android.app.PendingIntent mPermissionIntent -> c
    android.os.ParcelFileDescriptor filedescriptor -> d
    java.io.FileInputStream inputstream -> e
    java.io.FileOutputStream outputstream -> f
    boolean mPermissionRequestPending -> g
    me.spadival.podmode.FT311UARTInterface$read_thread readThread -> h
    byte[] usbdata -> t
    byte[] writeusbdata -> u
    byte[] readBuffer -> v
    int readcount -> w
    int totalBytes -> x
    int writeIndex -> y
    int readIndex -> z
    byte status -> A
    int maxnumbytes -> i
    boolean datareceived -> j
    boolean READ_ENABLE -> k
    boolean accessory_attached -> l
    android.content.Context global_context -> m
    java.lang.String ManufacturerString -> n
    java.lang.String ModelString1 -> o
    java.lang.String ModelString2 -> p
    java.lang.String VersionString -> q
    android.content.SharedPreferences intsharePrefSettings -> r
    android.content.BroadcastReceiver mUsbReceiver -> s
    void SetConfig(int,byte,byte,byte,byte) -> a
    byte SendData(int,byte[]) -> a
    byte ReadData(int,byte[],int[]) -> a
    void SendPacket(int) -> a
    int ResumeAccessory() -> a
    void DestroyAccessory(boolean) -> a
    void OpenAccessory(android.hardware.usb.UsbAccessory) -> a
    void CloseAccessory() -> d
    void saveDetachPreference() -> b
    void saveDefaultPreference() -> c
    void access$0(me.spadival.podmode.FT311UARTInterface) -> a
    int access$1(me.spadival.podmode.FT311UARTInterface) -> b
    byte[] access$2(me.spadival.podmode.FT311UARTInterface) -> c
    void access$3(me.spadival.podmode.FT311UARTInterface,int) -> a
    int access$4(me.spadival.podmode.FT311UARTInterface) -> d
    byte[] access$5(me.spadival.podmode.FT311UARTInterface) -> e
    int access$6(me.spadival.podmode.FT311UARTInterface) -> f
    void access$7(me.spadival.podmode.FT311UARTInterface,int) -> b
    int access$8(me.spadival.podmode.FT311UARTInterface) -> g
    void access$9(me.spadival.podmode.FT311UARTInterface,int) -> c
me.spadival.podmode.FT311UARTInterface$1 -> me.spadival.podmode.g:
    me.spadival.podmode.FT311UARTInterface this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
me.spadival.podmode.FT311UARTInterface$read_thread -> me.spadival.podmode.h:
    java.io.FileInputStream instream -> a
    me.spadival.podmode.FT311UARTInterface this$0 -> b
    void run() -> run
me.spadival.podmode.FTDICHIPTYPE -> me.spadival.podmode.i:
    me.spadival.podmode.FTDICHIPTYPE FT232RL -> a
    me.spadival.podmode.FTDICHIPTYPE FT2232C -> b
    me.spadival.podmode.FTDICHIPTYPE FT232H -> c
    me.spadival.podmode.FTDICHIPTYPE FT2232D -> d
    me.spadival.podmode.FTDICHIPTYPE FT2232HL -> e
    me.spadival.podmode.FTDICHIPTYPE FT4232HL -> f
    me.spadival.podmode.FTDICHIPTYPE FT230X -> g
    me.spadival.podmode.FTDICHIPTYPE CDC -> h
    me.spadival.podmode.FTDICHIPTYPE PL2303 -> i
    me.spadival.podmode.FTDICHIPTYPE[] ENUM$VALUES -> j
    me.spadival.podmode.FTDICHIPTYPE[] values() -> values
    me.spadival.podmode.FTDICHIPTYPE valueOf(java.lang.String) -> valueOf
me.spadival.podmode.FTDriver -> me.spadival.podmode.j:
    boolean mReadPakcetChecker -> a
    me.spadival.podmode.UsbId[] IDS -> b
    me.spadival.podmode.UsbId mSelectedDeviceInfo -> c
    int[] mSerialProperty -> d
    int mPacketSize -> e
    android.hardware.usb.UsbManager mManager -> f
    android.hardware.usb.UsbDevice mDevice -> g
    android.hardware.usb.UsbDeviceConnection mDeviceConnection -> h
    android.hardware.usb.UsbInterface[] mInterface -> i
    android.hardware.usb.UsbEndpoint[] mFTDIEndpointIN -> j
    android.hardware.usb.UsbEndpoint[] mFTDIEndpointOUT -> k
    int mReadbufOffset -> l
    int mReadbufRemain -> m
    byte[] mReadbuf -> n
    int incReadCount -> o
    int totalReadCount -> p
    boolean updateReadCount -> q
    boolean isCDC -> r
    android.app.PendingIntent mPermissionIntent -> s
    boolean begin(int) -> a
    void end() -> a
    int read(byte[]) -> a
    int read(byte[],int) -> a
    int write(byte[]) -> b
    int write(byte[],int,int) -> a
    boolean setBaudrate(int,int) -> a
    void initFTDIChip(android.hardware.usb.UsbDeviceConnection,int) -> a
    void initCdcAcm(android.hardware.usb.UsbDeviceConnection) -> a
    int calcFTDIBaudrate(int,me.spadival.podmode.FTDICHIPTYPE) -> a
    int calcFT232bmBaudBaseToDiv(int,int) -> b
    int calcFT232hBaudBaseToDiv(int,int) -> c
    boolean setFTDIEndpoints(android.hardware.usb.UsbInterface[],int) -> a
    boolean setUSBInterface(android.hardware.usb.UsbDevice,android.hardware.usb.UsbInterface,int) -> a
    boolean getUsbInterfaces(android.hardware.usb.UsbDevice) -> b
    android.hardware.usb.UsbInterface[] findUSBInterfaceByVIDPID(android.hardware.usb.UsbDevice,int,int) -> a
    void getPermission(android.hardware.usb.UsbDevice) -> a
me.spadival.podmode.MainActivity -> me.spadival.podmode.MainActivity:
    android.widget.TextView mProcessText -> d
    android.widget.TextView mSongText -> e
    android.widget.ImageView mAppIcon -> f
    boolean startViaUSB -> a
    boolean mStartViaUSB -> g
    android.content.BroadcastReceiver mUsbReceiver -> b
    android.content.BroadcastReceiver mPlayReceiver -> c
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDestroy() -> onDestroy
    android.widget.TextView access$0(me.spadival.podmode.MainActivity) -> a
    android.widget.TextView access$1(me.spadival.podmode.MainActivity) -> b
    android.widget.ImageView access$2(me.spadival.podmode.MainActivity) -> c
me.spadival.podmode.MainActivity$1 -> me.spadival.podmode.k:
    me.spadival.podmode.MainActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
me.spadival.podmode.MainActivity$2 -> me.spadival.podmode.l:
    me.spadival.podmode.MainActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
me.spadival.podmode.MusicFocusable -> me.spadival.podmode.m:
    void onGainedAudioFocus() -> a
    void onLostAudioFocus(boolean) -> a
me.spadival.podmode.MusicRetriever -> me.spadival.podmode.n:
    java.lang.String TAG -> a
    android.content.ContentResolver mContentResolver -> b
    android.content.Context mContext -> c
    java.util.List mNowPlaying -> d
    me.spadival.podmode.MusicRetriever$Track mDefaultTrack -> e
    java.util.Random mRandom -> f
    android.database.Cursor activeCursor -> g
    java.lang.String activePlaylist -> h
    long activePlaylistId -> i
    int activePlaylistNum -> j
    java.lang.String activeGenre -> k
    long activeGenreId -> l
    java.lang.String activeArtist -> m
    long activeArtistId -> n
    java.lang.String activeAlbum -> o
    long activeAlbumId -> p
    java.lang.String activeTrack -> q
    long activeTrackId -> r
    int categoryCount -> s
    boolean mPlayInApp -> t
    me.spadival.podmode.MusicRetriever$Category activeCategory -> u
    void saveState(android.content.SharedPreferences,int) -> a
    void changeApp(boolean,java.lang.String,java.lang.String,long) -> a
    void prepare() -> a
    me.spadival.podmode.MusicRetriever$Track getTrack(int) -> a
    int getCount() -> b
    int getPlaylistNum() -> c
    void shuffleTracks() -> d
    void switchToMainPlaylist() -> e
    void closeActiveCursor() -> f
    int getCountForType(int) -> b
    java.lang.String[] GetItemNames(int,int,int) -> a
    boolean switchToItem(int,int) -> a
    void ExecPlaylist() -> g
    void loadTracks() -> i
    void setupDummyCursor() -> j
    void setupTrackCursor() -> h
    void setupAlbumCursor() -> k
    void setupArtistCursor() -> l
    void setupGenreCursor() -> m
    void setupPlaylistCursor() -> n
me.spadival.podmode.MusicRetriever$Category -> me.spadival.podmode.o:
    me.spadival.podmode.MusicRetriever$Category All -> a
    me.spadival.podmode.MusicRetriever$Category Playlist -> b
    me.spadival.podmode.MusicRetriever$Category Artist -> c
    me.spadival.podmode.MusicRetriever$Category Album -> d
    me.spadival.podmode.MusicRetriever$Category Genre -> e
    me.spadival.podmode.MusicRetriever$Category Track -> f
    me.spadival.podmode.MusicRetriever$Category[] ENUM$VALUES -> g
    me.spadival.podmode.MusicRetriever$Category[] values() -> values
    me.spadival.podmode.MusicRetriever$Category valueOf(java.lang.String) -> valueOf
me.spadival.podmode.MusicRetriever$Track -> me.spadival.podmode.p:
    long id -> a
    java.lang.String artist -> b
    java.lang.String title -> c
    java.lang.String album -> d
    java.lang.String albumArtUri -> e
    long duration -> f
    java.lang.String getTitle() -> a
    java.lang.String getAlbumArtUri() -> b
    android.net.Uri getURI() -> c
me.spadival.podmode.NoticesActivity -> me.spadival.podmode.NoticesActivity:
    void onCreate(android.os.Bundle) -> onCreate
me.spadival.podmode.PodModeService -> me.spadival.podmode.PodModeService:
    java.lang.Thread mMainThread -> u
    android.media.MediaPlayer mPlayer -> a
    me.spadival.podmode.AudioFocusHelper mAudioFocusHelper -> b
    me.spadival.podmode.PodModeService$State mState -> v
    int mNowPlaying -> w
    int mPrevPlaying -> x
    int mPollSpeed -> y
    int mChangedCounter -> z
    boolean mNotifyHack -> A
    java.lang.String mBanner -> B
    boolean mStartPlayingAfterRetrieve -> c
    android.net.Uri mWhatToPlayAfterRetrieve -> d
    me.spadival.podmode.PodModeService$PauseReason mPauseReason -> e
    me.spadival.podmode.PodModeService$AudioFocus mAudioFocus -> f
    java.lang.String mAppName -> g
    java.lang.String mSongTitle -> h
    java.lang.String mAlbumArtUri -> i
    int mElapsedTime -> j
    boolean mIsStreaming -> k
    android.net.wifi.WifiManager$WifiLock mWifiLock -> l
    int NOTIFICATION_ID -> m
    me.spadival.podmode.MusicRetriever mRetriever -> n
    android.media.AudioManager mAudioManager -> o
    android.app.NotificationManager mNotificationManager -> p
    android.app.Notification mNotification -> q
    byte[] DEVTYPESIZE -> r
    java.lang.String WAKETAG -> s
    me.spadival.podmode.PodModeService$deviceType mDeviceType -> C
    me.spadival.podmode.FTDriver mSerialHost -> D
    me.spadival.podmode.FT311UARTInterface mSerialDevice -> E
    android.bluetooth.BluetoothAdapter mBluetoothAdapter -> F
    android.bluetooth.BluetoothDevice mBluetoothDevice -> G
    me.spadival.podmode.BluetoothSerialService mBTDevice -> H
    int mSerialBaudRate -> I
    int mReadLen -> J
    byte[] mReadBuffer -> K
    boolean mPodRunning -> L
    boolean mLaunchFirstTime -> M
    android.os.PowerManager$WakeLock podWakeLock -> N
    byte mUpdateFlag -> O
    me.spadival.podmode.PodModeService$modeStat mPodRepeatMode -> P
    me.spadival.podmode.PodModeService$modeStat mPodShuffleMode -> Q
    me.spadival.podmode.PodModeService$podStat mPodStatus -> R
    java.lang.String mSimpleRemoteApp -> S
    java.lang.String mAdvancedRemoteApp -> T
    java.lang.String mAccessoryName -> U
    java.lang.String mAccessoryMnf -> V
    java.lang.String mAccessoryModel -> W
    boolean mHTTPsend -> X
    int[] mLen -> t
    java.util.Timer mMediaChangeTimer -> Y
    java.util.TimerTask mMediaChangeTask -> Z
    java.lang.Thread mHttpThread -> aa
    android.content.BroadcastReceiver mUsbReceiver -> ab
    android.os.Handler mHandler -> ac
    java.util.Timer mNotifyChangeTimer -> ad
    java.util.TimerTask mNotifyChangeTask -> ae
    android.content.BroadcastReceiver mNotifyReceiver -> af
    int[] $SWITCH_TABLE$me$spadival$podmode$podCmd -> ag
    int[] $SWITCH_TABLE$me$spadival$podmode$PodModeService$State -> ah
    void serialWrite(byte[]) -> a
    int mSerialRead(byte[]) -> b
    void onCreate() -> onCreate
    void onMusicRetrieverPrepared() -> b
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    void mainloop() -> o
    void broadcastMediaButtons(int,java.lang.String) -> a
    void run() -> run
    me.spadival.podmode.podCommand readCommand() -> p
    void processTogglePlaybackRequest() -> c
    void processPlayRequest() -> d
    void processPauseRequest() -> e
    void processSkipRequest() -> f
    void processSkipRwdRequest() -> g
    void processStopRequest() -> h
    void processStopRequest(boolean) -> b
    void createMediaPlayerIfNeeded() -> i
    void relaxResources(boolean) -> c
    void giveUpAudioFocus() -> j
    void configAndStartMediaPlayer() -> k
    void tryToGetAudioFocus() -> l
    void playNextSong(java.lang.String) -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void updateNotification(java.lang.String) -> b
    void setUpAsForeground(java.lang.String) -> c
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onGainedAudioFocus() -> a
    void onLostAudioFocus(boolean) -> a
    void localBroadcast(boolean) -> d
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int access$0(me.spadival.podmode.PodModeService) -> a
    me.spadival.podmode.PodModeService$State access$1(me.spadival.podmode.PodModeService) -> b
    int access$2(me.spadival.podmode.PodModeService) -> c
    void access$3(me.spadival.podmode.PodModeService,int) -> a
    void access$4(me.spadival.podmode.PodModeService,byte) -> a
    int access$5(me.spadival.podmode.PodModeService) -> d
    void access$6(me.spadival.podmode.PodModeService,byte[]) -> a
    java.lang.String access$7(me.spadival.podmode.PodModeService) -> e
    java.lang.String access$8(me.spadival.podmode.PodModeService) -> f
    java.lang.String access$9(me.spadival.podmode.PodModeService) -> g
    int access$10(me.spadival.podmode.PodModeService) -> h
    me.spadival.podmode.PodModeService$podStat access$11(me.spadival.podmode.PodModeService) -> i
    void access$12(me.spadival.podmode.PodModeService,boolean) -> a
    boolean access$13(me.spadival.podmode.PodModeService) -> j
    void access$14(me.spadival.podmode.PodModeService,me.spadival.podmode.PodModeService$deviceType) -> a
    void access$15(me.spadival.podmode.PodModeService,int) -> b
    void access$16(me.spadival.podmode.PodModeService,java.lang.String) -> a
    void access$17(me.spadival.podmode.PodModeService,boolean) -> b
    void access$18(me.spadival.podmode.PodModeService) -> k
    java.lang.String access$19(me.spadival.podmode.PodModeService) -> l
    me.spadival.podmode.PodModeService$deviceType access$20(me.spadival.podmode.PodModeService) -> m
    java.lang.String access$21(me.spadival.podmode.PodModeService) -> n
    void access$22(me.spadival.podmode.PodModeService,boolean) -> c
    java.util.TimerTask access$23(me.spadival.podmode.PodModeService) -> o
    void access$24(me.spadival.podmode.PodModeService,java.util.TimerTask) -> a
    void access$25(me.spadival.podmode.PodModeService,java.util.Timer) -> a
    java.util.Timer access$26(me.spadival.podmode.PodModeService) -> p
    int[] $SWITCH_TABLE$me$spadival$podmode$podCmd() -> m
    int[] $SWITCH_TABLE$me$spadival$podmode$PodModeService$State() -> n
me.spadival.podmode.PodModeService$1 -> me.spadival.podmode.q:
    me.spadival.podmode.PodModeService this$0 -> a
    void run() -> run
me.spadival.podmode.PodModeService$2 -> me.spadival.podmode.r:
    me.spadival.podmode.PodModeService this$0 -> a
    void run() -> run
me.spadival.podmode.PodModeService$3 -> me.spadival.podmode.s:
    me.spadival.podmode.PodModeService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
me.spadival.podmode.PodModeService$4 -> me.spadival.podmode.t:
    me.spadival.podmode.PodModeService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
me.spadival.podmode.PodModeService$5 -> me.spadival.podmode.u:
    me.spadival.podmode.PodModeService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    me.spadival.podmode.PodModeService access$0(me.spadival.podmode.PodModeService$5) -> a
me.spadival.podmode.PodModeService$5$1 -> me.spadival.podmode.v:
    me.spadival.podmode.PodModeService$5 this$1 -> a
    void run() -> run
me.spadival.podmode.PodModeService$AudioFocus -> me.spadival.podmode.w:
    me.spadival.podmode.PodModeService$AudioFocus NoFocusNoDuck -> a
    me.spadival.podmode.PodModeService$AudioFocus NoFocusCanDuck -> b
    me.spadival.podmode.PodModeService$AudioFocus Focused -> c
    me.spadival.podmode.PodModeService$AudioFocus[] ENUM$VALUES -> d
    me.spadival.podmode.PodModeService$AudioFocus[] values() -> values
    me.spadival.podmode.PodModeService$AudioFocus valueOf(java.lang.String) -> valueOf
me.spadival.podmode.PodModeService$PauseReason -> me.spadival.podmode.x:
    me.spadival.podmode.PodModeService$PauseReason UserRequest -> a
    me.spadival.podmode.PodModeService$PauseReason FocusLoss -> b
    me.spadival.podmode.PodModeService$PauseReason[] ENUM$VALUES -> c
    me.spadival.podmode.PodModeService$PauseReason[] values() -> values
    me.spadival.podmode.PodModeService$PauseReason valueOf(java.lang.String) -> valueOf
me.spadival.podmode.PodModeService$State -> me.spadival.podmode.y:
    me.spadival.podmode.PodModeService$State Retrieving -> a
    me.spadival.podmode.PodModeService$State Stopped -> b
    me.spadival.podmode.PodModeService$State Preparing -> c
    me.spadival.podmode.PodModeService$State Playing -> d
    me.spadival.podmode.PodModeService$State Paused -> e
    me.spadival.podmode.PodModeService$State[] ENUM$VALUES -> f
    me.spadival.podmode.PodModeService$State[] values() -> values
    me.spadival.podmode.PodModeService$State valueOf(java.lang.String) -> valueOf
me.spadival.podmode.PodModeService$deviceType -> me.spadival.podmode.z:
    me.spadival.podmode.PodModeService$deviceType FT311D -> a
    me.spadival.podmode.PodModeService$deviceType FT232PL2303 -> b
    me.spadival.podmode.PodModeService$deviceType MC05BT -> c
    me.spadival.podmode.PodModeService$deviceType[] ENUM$VALUES -> d
    me.spadival.podmode.PodModeService$deviceType[] values() -> values
    me.spadival.podmode.PodModeService$deviceType valueOf(java.lang.String) -> valueOf
me.spadival.podmode.PodModeService$modeStat -> me.spadival.podmode.aa:
    me.spadival.podmode.PodModeService$modeStat Off -> a
    me.spadival.podmode.PodModeService$modeStat Songs -> b
    me.spadival.podmode.PodModeService$modeStat Albums -> c
    me.spadival.podmode.PodModeService$modeStat[] ENUM$VALUES -> d
    me.spadival.podmode.PodModeService$modeStat[] values() -> values
    me.spadival.podmode.PodModeService$modeStat valueOf(java.lang.String) -> valueOf
me.spadival.podmode.PodModeService$podStat -> me.spadival.podmode.ab:
    me.spadival.podmode.PodModeService$podStat WAITING -> a
    me.spadival.podmode.PodModeService$podStat SIMPLEREMOTE -> b
    me.spadival.podmode.PodModeService$podStat ADVANCEDREMOTE -> c
    me.spadival.podmode.PodModeService$podStat ADVANCEDHACK -> d
    me.spadival.podmode.PodModeService$podStat DISPLAYREMOTE -> e
    me.spadival.podmode.PodModeService$podStat[] ENUM$VALUES -> f
    me.spadival.podmode.PodModeService$podStat[] values() -> values
    me.spadival.podmode.PodModeService$podStat valueOf(java.lang.String) -> valueOf
me.spadival.podmode.PodNotifyService -> me.spadival.podmode.PodNotifyService:
    void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onAccessibilityEvent
    void onInterrupt() -> onInterrupt
me.spadival.podmode.PrepareMusicRetrieverTask -> me.spadival.podmode.ac:
    me.spadival.podmode.MusicRetriever mRetriever -> a
    me.spadival.podmode.PrepareMusicRetrieverTask$MusicRetrieverPreparedListener mListener -> b
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
me.spadival.podmode.PrepareMusicRetrieverTask$MusicRetrieverPreparedListener -> me.spadival.podmode.ad:
    void onMusicRetrieverPrepared() -> b
me.spadival.podmode.SettingsActivity -> me.spadival.podmode.SettingsActivity:
    void onCreate(android.os.Bundle) -> onCreate
me.spadival.podmode.SettingsFragment -> me.spadival.podmode.ae:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
me.spadival.podmode.UsbId -> me.spadival.podmode.af:
    int mVid -> a
    int mPid -> b
    int mBcdDevice -> c
    int mNumOfChannels -> d
    me.spadival.podmode.FTDICHIPTYPE mType -> e
me.spadival.podmode.podCmd -> me.spadival.podmode.ag:
    me.spadival.podmode.podCmd AppCmd -> a
    me.spadival.podmode.podCmd AppAck -> b
    me.spadival.podmode.podCmd unknownCmd -> c
    me.spadival.podmode.podCmd StartID -> d
    me.spadival.podmode.podCmd EndID -> e
    me.spadival.podmode.podCmd GetPodProtocols -> f
    me.spadival.podmode.podCmd GetPodOptions -> g
    me.spadival.podmode.podCmd GetPodOption -> h
    me.spadival.podmode.podCmd GetProtoVersion -> i
    me.spadival.podmode.podCmd GetSoftVersion -> j
    me.spadival.podmode.podCmd GetSerialNum -> k
    me.spadival.podmode.podCmd SetIdTokens -> l
    me.spadival.podmode.podCmd DeviceDetails -> m
    me.spadival.podmode.podCmd DeviceAuthInfo -> n
    me.spadival.podmode.podCmd DeviceAuthSig -> o
    me.spadival.podmode.podCmd ReqAdvRemote -> p
    me.spadival.podmode.podCmd SwitchRemote -> q
    me.spadival.podmode.podCmd RemoteNotify -> r
    me.spadival.podmode.podCmd StateInfo -> s
    me.spadival.podmode.podCmd RemoteButtonRel -> t
    me.spadival.podmode.podCmd RemotePlayPause -> u
    me.spadival.podmode.podCmd RemoteVolPlus -> v
    me.spadival.podmode.podCmd RemoteVolMinus -> w
    me.spadival.podmode.podCmd RemoteSkipFwd -> x
    me.spadival.podmode.podCmd RemoteSkipRwd -> y
    me.spadival.podmode.podCmd RemoteNextAlb -> z
    me.spadival.podmode.podCmd RemotePrevAlb -> A
    me.spadival.podmode.podCmd RemoteStop -> B
    me.spadival.podmode.podCmd RemoteJustPlay -> C
    me.spadival.podmode.podCmd RemoteJustPause -> D
    me.spadival.podmode.podCmd RemoteMuteToggle -> E
    me.spadival.podmode.podCmd RemoteNextPlay -> F
    me.spadival.podmode.podCmd RemotePrevPlay -> G
    me.spadival.podmode.podCmd RemoteShuffleToggle -> H
    me.spadival.podmode.podCmd RemoteRepeatToggle -> I
    me.spadival.podmode.podCmd RemoteOff -> J
    me.spadival.podmode.podCmd RemoteOn -> K
    me.spadival.podmode.podCmd RemoteMenu -> L
    me.spadival.podmode.podCmd RemoteOk -> M
    me.spadival.podmode.podCmd RemoteScrollUp -> N
    me.spadival.podmode.podCmd RemoteScrollDn -> O
    me.spadival.podmode.podCmd RemoteRelease -> P
    me.spadival.podmode.podCmd SwitchAdvanced -> Q
    me.spadival.podmode.podCmd StartAdvRemote -> R
    me.spadival.podmode.podCmd EndAdvRemote -> S
    me.spadival.podmode.podCmd DevModel -> T
    me.spadival.podmode.podCmd DevTypeSize -> U
    me.spadival.podmode.podCmd DevName -> V
    me.spadival.podmode.podCmd SwitchToMainPlaylist -> W
    me.spadival.podmode.podCmd SwitchToItem -> X
    me.spadival.podmode.podCmd GetCountForType -> Y
    me.spadival.podmode.podCmd GetItemNames -> Z
    me.spadival.podmode.podCmd GetTimeStatus -> aa
    me.spadival.podmode.podCmd GetPlaylistPos -> ab
    me.spadival.podmode.podCmd GetSongTitle -> ac
    me.spadival.podmode.podCmd GetSongArtist -> ad
    me.spadival.podmode.podCmd GetSongAlbum -> ae
    me.spadival.podmode.podCmd PollingMode -> af
    me.spadival.podmode.podCmd ExecPlaylist -> ag
    me.spadival.podmode.podCmd PlaybackControl -> ah
    me.spadival.podmode.podCmd GetShuffleMode -> ai
    me.spadival.podmode.podCmd SetShuffleMode -> aj
    me.spadival.podmode.podCmd GetRepeatMode -> ak
    me.spadival.podmode.podCmd SetRepeatMode -> al
    me.spadival.podmode.podCmd PicBlock -> am
    me.spadival.podmode.podCmd GetScreenSize -> an
    me.spadival.podmode.podCmd GetPlayListSongNum -> ao
    me.spadival.podmode.podCmd JumpToSong -> ap
    me.spadival.podmode.podCmd GetUpdateFlag -> aq
    me.spadival.podmode.podCmd SetUpdateFlag -> ar
    me.spadival.podmode.podCmd FrankPlaylist -> as
    me.spadival.podmode.podCmd[] ENUM$VALUES -> at
    me.spadival.podmode.podCmd[] values() -> values
    me.spadival.podmode.podCmd valueOf(java.lang.String) -> valueOf
me.spadival.podmode.podCommand -> me.spadival.podmode.ah:
    byte[] rawBytes -> a
    int length -> b
    int mode -> c
    short hexCmd -> d
    byte[] params -> e
    byte checksum -> f
    me.spadival.podmode.podCmd command -> g
me.spadival.podmode.podResponse -> me.spadival.podmode.ai:
    byte[] resBytes -> a
    java.lang.String accessoryName -> b
    java.lang.String accessoryMnf -> c
    java.lang.String accessoryModel -> d
    byte[] getBytes() -> a
